version: '3'
services:
# APP
  app:
    container_name: app
    build: ./app
    ports: 
      - 8080:8080 
    restart: on-failure
    environment:
      - APP_POSTGRES_HOST=postgres
    volumes:
      - api:/usr/src/app/
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - net
    links:
      - "postgres"
# POSTGRES
  postgres:
    build: ./db
    # image: postgres:16.0
    container_name: db
    restart: always
    user: postgres
    # environment:
    #   - POSTGRES_USER=${DB_USER}
    #   - POSTGRES_PASSWORD=${DB_PASSWORD}
    #   - POSTGRES_DB=${DB_NAME}
    #   - DATABASE_HOST=${DB_HOST}
    ports:
      - '5432:5432'
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - net
# # PGADMIN
#   pgadmin:
#     image: dpage/pgadmin4:7.8
#     container_name: pgadmin
#     environment:
#       PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
#       PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
#     depends_on:
#       - postgres
#     ports:
#       - "5050:80"
#     networks:
#       - net
#     restart: unless-stopped
volumes:
  api:
  database_postgres:
networks:
  net:
    driver: bridge
